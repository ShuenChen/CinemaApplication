#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CinemaApplication1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Cinema")]
	public partial class CinemaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertMember(Member instance);
    partial void UpdateMember(Member instance);
    partial void DeleteMember(Member instance);
    #endregion
		
		public CinemaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CinemaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CinemaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CinemaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CinemaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<Member> Members
		{
			get
			{
				return this.GetTable<Member>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdminID;
		
		private string _PurchaseID;
		
		private string _ReportID;
		
		private string _adminName;
		
		private string _adminEmail;
		
		private string _adminPassword;
		
		private System.DateTime _dateJoin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    partial void OnPurchaseIDChanging(string value);
    partial void OnPurchaseIDChanged();
    partial void OnReportIDChanging(string value);
    partial void OnReportIDChanged();
    partial void OnadminNameChanging(string value);
    partial void OnadminNameChanged();
    partial void OnadminEmailChanging(string value);
    partial void OnadminEmailChanged();
    partial void OnadminPasswordChanging(string value);
    partial void OnadminPasswordChanged();
    partial void OndateJoinChanging(System.DateTime value);
    partial void OndateJoinChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", DbType="VarChar(50)")]
		public string PurchaseID
		{
			get
			{
				return this._PurchaseID;
			}
			set
			{
				if ((this._PurchaseID != value))
				{
					this.OnPurchaseIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseID = value;
					this.SendPropertyChanged("PurchaseID");
					this.OnPurchaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportID", DbType="VarChar(50)")]
		public string ReportID
		{
			get
			{
				return this._ReportID;
			}
			set
			{
				if ((this._ReportID != value))
				{
					this.OnReportIDChanging(value);
					this.SendPropertyChanging();
					this._ReportID = value;
					this.SendPropertyChanged("ReportID");
					this.OnReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adminName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string adminName
		{
			get
			{
				return this._adminName;
			}
			set
			{
				if ((this._adminName != value))
				{
					this.OnadminNameChanging(value);
					this.SendPropertyChanging();
					this._adminName = value;
					this.SendPropertyChanged("adminName");
					this.OnadminNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adminEmail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string adminEmail
		{
			get
			{
				return this._adminEmail;
			}
			set
			{
				if ((this._adminEmail != value))
				{
					this.OnadminEmailChanging(value);
					this.SendPropertyChanging();
					this._adminEmail = value;
					this.SendPropertyChanged("adminEmail");
					this.OnadminEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adminPassword", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string adminPassword
		{
			get
			{
				return this._adminPassword;
			}
			set
			{
				if ((this._adminPassword != value))
				{
					this.OnadminPasswordChanging(value);
					this.SendPropertyChanging();
					this._adminPassword = value;
					this.SendPropertyChanged("adminPassword");
					this.OnadminPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateJoin", DbType="Date NOT NULL")]
		public System.DateTime dateJoin
		{
			get
			{
				return this._dateJoin;
			}
			set
			{
				if ((this._dateJoin != value))
				{
					this.OndateJoinChanging(value);
					this.SendPropertyChanging();
					this._dateJoin = value;
					this.SendPropertyChanged("dateJoin");
					this.OndateJoinChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Member")]
	public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberID;
		
		private string _memberName;
		
		private string _memberEmail;
		
		private string _memberPassword;
		
		private System.DateTime _dateJoin;
		
		private int _forgetPwdQuestion;
		
		private string _forgetPwdAnswer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnmemberNameChanging(string value);
    partial void OnmemberNameChanged();
    partial void OnmemberEmailChanging(string value);
    partial void OnmemberEmailChanged();
    partial void OnmemberPasswordChanging(string value);
    partial void OnmemberPasswordChanged();
    partial void OndateJoinChanging(System.DateTime value);
    partial void OndateJoinChanged();
    partial void OnforgetPwdQuestionChanging(int value);
    partial void OnforgetPwdQuestionChanged();
    partial void OnforgetPwdAnswerChanging(string value);
    partial void OnforgetPwdAnswerChanged();
    #endregion
		
		public Member()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberName", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string memberName
		{
			get
			{
				return this._memberName;
			}
			set
			{
				if ((this._memberName != value))
				{
					this.OnmemberNameChanging(value);
					this.SendPropertyChanging();
					this._memberName = value;
					this.SendPropertyChanged("memberName");
					this.OnmemberNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberEmail", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string memberEmail
		{
			get
			{
				return this._memberEmail;
			}
			set
			{
				if ((this._memberEmail != value))
				{
					this.OnmemberEmailChanging(value);
					this.SendPropertyChanging();
					this._memberEmail = value;
					this.SendPropertyChanged("memberEmail");
					this.OnmemberEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberPassword", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string memberPassword
		{
			get
			{
				return this._memberPassword;
			}
			set
			{
				if ((this._memberPassword != value))
				{
					this.OnmemberPasswordChanging(value);
					this.SendPropertyChanging();
					this._memberPassword = value;
					this.SendPropertyChanged("memberPassword");
					this.OnmemberPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateJoin", DbType="Date NOT NULL")]
		public System.DateTime dateJoin
		{
			get
			{
				return this._dateJoin;
			}
			set
			{
				if ((this._dateJoin != value))
				{
					this.OndateJoinChanging(value);
					this.SendPropertyChanging();
					this._dateJoin = value;
					this.SendPropertyChanged("dateJoin");
					this.OndateJoinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_forgetPwdQuestion", DbType="Int NOT NULL")]
		public int forgetPwdQuestion
		{
			get
			{
				return this._forgetPwdQuestion;
			}
			set
			{
				if ((this._forgetPwdQuestion != value))
				{
					this.OnforgetPwdQuestionChanging(value);
					this.SendPropertyChanging();
					this._forgetPwdQuestion = value;
					this.SendPropertyChanged("forgetPwdQuestion");
					this.OnforgetPwdQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_forgetPwdAnswer", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string forgetPwdAnswer
		{
			get
			{
				return this._forgetPwdAnswer;
			}
			set
			{
				if ((this._forgetPwdAnswer != value))
				{
					this.OnforgetPwdAnswerChanging(value);
					this.SendPropertyChanging();
					this._forgetPwdAnswer = value;
					this.SendPropertyChanged("forgetPwdAnswer");
					this.OnforgetPwdAnswerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
